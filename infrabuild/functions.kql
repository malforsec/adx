.show tables

.show functions

.create-or-alter function with (folder = "ETL_UpdatePolicyFunctions", skipvalidation = "true") alert() {
    zsuricataraw
    //| where _timestamp between (datetime("2024-02-13 11:35:00") .. datetime("2024-02-14 06:35:00")) or _timestamp between (datetime("2024-03-01 01:50:00") .. datetime("2024-03-02 03:05:00"))
    | where source_ip in~ (localips) or destination_ip in~ (localips)
}

.create-or-alter function with (folder = "ETL_UpdatePolicyFunctions", skipvalidation = "true") mdatp() {
    zmdatpraw
    | where Timestamp between (datetime("2024-02-13 11:45:00") .. datetime("2024-02-14 06:35:00")) or Timestamp between (datetime("2024-03-01 01:50:00") .. datetime("2024-03-02 03:05:00"))
}

.create-or-alter function with (folder = "ETL_UpdatePolicyFunctions", skipvalidation = "true") event() {
    zeventraw
    | where _timestamp between (datetime("2024-02-13 11:35:00") .. datetime("2024-02-14 06:35:00")) or _timestamp between (datetime("2024-03-01 01:50:00") .. datetime("2024-03-02 03:05:00"))
    | extend User=extract('(User:.)(.*)', 2, message)
    | extend SessionID=extract('(Session ID:.)(.*)', 2, message)
    | extend ServiceFileName=extract('(Service File Name:.)(.*)', 2, message)
    | extend ServiceType=extract('(Service Type:.)(.*)', 2, message)
    | extend ServiceStartType=extract('(Service Start Type:.)(.*)', 2, message)
    | extend ServiceAccount=extract('(Service Account:.)(.*)', 2, message)
    | extend SourceNetworkAddress=extract('(Source Network Address:.)(.*)', 2, message)
    | extend TargetLogonId = winlog_event_data["TargetLogonId"]
    | extend CommandLine =  winlog_event_data["CommandLine"]
    | extend SubjectLogonIdextend = winlog_event_data["SubjectLogonIdextend"]
    | extend SubjectUserSid = winlog_event_data["SubjectUserSid"]
    | extend ProcessId = winlog_event_data["ProcessId"]
    | extend TargetUserSid = winlog_event_data["TargetUserSid"]
    | extend SubjectUserName = winlog_event_data["SubjectUserName"]
    | extend TargetDomainName = winlog_event_data["TargetDomainName"]
    | extend TargetUserName = winlog_event_data["TargetUserName"]
    | extend MandatoryLabel = winlog_event_data["MandatoryLabel"]
    | extend TokenElevationType = winlog_event_data["TokenElevationType"]
    | extend SubjectDomainName = winlog_event_data["SubjectDomainName"]
    | extend ServiceName = winlog_event_data["ServiceName"]
    | extend ImagePath = winlog_event_data["ImagePath"]
    | extend StartType = winlog_event_data["StartType"]
    | extend AccountName = winlog_event_data["AccountName"]
    | extend SubjectLogonId = winlog_event_data["SubjectLogonId"]
    | extend SubjectUserSid = winlog_event_data["SubjectUserSid"]
    | extend SubjectUserName = winlog_event_data["SubjectUserName"]
    | extend SubjectDomainName = winlog_event_data["SubjectDomainName"]
    | extend IpAddress = winlog_event_data["IpAddress"]
    | extend IpPort = winlog_event_data["IpPort"]
    | extend AccessList = winlog_event_data["AccessList"]
    | extend ObjectType = winlog_event_data["ObjectType"]
    | extend AccessMask = winlog_event_data["AccessMask"]
    | extend ShareName = winlog_event_data["ShareName"]
    | extend ShareLocalPath = winlog_event_data["ShareLocalPath"]
    | extend RelativeTargetName = winlog_event_data["RelativeTargetName"]
    | extend AccessReason = winlog_event_data["AccessReason"]
    | extend TargetLogonId = winlog_event_data["TargetLogonId"]
    | extend SubjectLogonId = winlog_event_data["SubjectLogonId"]
    | extend SubjectUserSid = winlog_event_data["SubjectUserSid"]
    | extend TargetUserSid = winlog_event_data["TargetUserSid"]
    | extend SubjectUserName = winlog_event_data["SubjectUserName"]
    | extend TargetDomainName = winlog_event_data["TargetDomainName"]
    | extend TargetUserName = winlog_event_data["TargetUserName"]
    | extend SubjectDomainName = winlog_event_data["SubjectDomainName"]
    | extend VirtualAccount = winlog_event_data["VirtualAccount"]
    | extend LogonType = winlog_event_data["LogonType"]
    | extend LogonGuid = winlog_event_data["LogonGuid"]
    | extend LmPackageName = winlog_event_data["LmPackageName"]
    | extend ElevatedToken = winlog_event_data["ElevatedToken"]
    | extend TransmittedServices = winlog_event_data["TransmittedServices"]
    | extend TargetOutboundDomainName = winlog_event_data["TargetOutboundDomainName"]
    | extend KeyLength = winlog_event_data["KeyLength"]
    | extend LogonProcessName = winlog_event_data["LogonProcessName"]
    | extend ImpersonationLevel = winlog_event_data["ImpersonationLevel"]
    | extend TargetOutboundUserName = winlog_event_data["TargetOutboundUserName"]
    | extend TargetLinkedLogonId = winlog_event_data["TargetLinkedLogonId"]
    | extend IpAddress = winlog_event_data["IpAddress"]
    | extend RestrictedAdminMode = winlog_event_data["RestrictedAdminMode"]
    | extend IpPort = winlog_event_data["IpPort"]
    | extend AuthenticationPackageName = winlog_event_data["AuthenticationPackageName"]
    | extend SessionName = winlog_event_data["SessionName"]
    | extend ClientName = winlog_event_data["ClientName"]
    | extend ClientAddress = winlog_event_data["ClientAddress"]
    | extend AccountDomain = winlog_event_data["AccountDomain"]
 }

.create-or-alter function with (folder = "ETL_UpdatePolicyFunctions", skipvalidation = "true") sigma() {
    zsigmaraw
    //| where Timestamp between (datetime("2024-02-13 11:45:00") .. datetime("2024-02-14 06:35:00")) or Timestamp between (datetime("2024-03-01 01:50:00") .. datetime("2024-03-02 03:05:00"))
}

.create-or-alter function with (folder = "ETL_UpdatePolicyFunctions", skipvalidation = "true") memorytimeline() {
    zmemorytimelineraw
}

.create-or-alter function with (folder = "ETL_UpdatePolicyFunctions", skipvalidation = "true") zeek() {
    zzeekraw
    | where _timestamp between (datetime("2024-02-13 11:45:00") .. datetime("2024-02-14 06:35:00")) or _timestamp  between (datetime("2024-03-01 01:50:00") .. datetime("2024-03-02 03:05:00"))
    | where source_ip in (localips) or destination_ip in (localips)
}


.create-or-alter function with (folder = "ETL_UpdatePolicyFunctions", skipvalidation = "true") sysmon() {
    zsysmonraw
    | where _timestamp between (datetime("2024-02-13 10:45:00") .. datetime("2024-02-14 06:35:00")) or _timestamp between (datetime("2024-03-01 01:50:00") .. datetime("2024-03-02 03:05:00"))
    | extend Archived=extract('(Archived:.)(.*)', 2, message)
    | extend CallTrace=extract('(CallTrace:.)(.*)', 2, message)
    | extend ClientInfo=extract('(ClientInfo:.)(.*)', 2, message)
    | extend CommandLine=extract('(CommandLine:.)(.*)', 2, message)
    | extend Company=extract('(Company:.)(.*)', 2, message)
    | extend Contents=extract('(Contents:.)(.*)', 2, message)
    | extend CreationUtcTime=extract('(CreationUtcTime:.)(.*)', 2, message)
    | extend CurrentDirectory=extract('(CurrentDirectory:.)(.*)', 2, message)
    | extend Description=extract('(Description:.)(.*)', 2, message)
    | extend DestinationHostname=extract('(DestinationHostname:.)(.*)', 2, message)
    | extend DestinationIp=extract('(DestinationIp:.)(.*)', 2, message)
    | extend DestinationIsIpv6=extract('(DestinationIsIpv6:.)(.*)', 2, message)
    | extend DestinationPort=extract('(DestinationPort:.)(.*)', 2, message)
    | extend DestinationPortName=extract('(DestinationPortName:.)(.*)', 2, message)
    | extend Details=extract('(Details:.)(.*)', 2, message)
    | extend EventType=extract('(EventType:.)(.*)', 2, message)
    | extend FileVersion=extract('(FileVersion:.)(.*)', 2, message)
    | extend GrantedAccess=extract('(GrantedAccess:.)(.*)', 2, message)
    | extend Hash=extract('(Hash:.)(.*)', 2, message)
    | extend Hashes=extract('(Hashes:.)(.*)', 2, message)
    | extend Image=extract('(Image:.)(.*)', 2, message)
    | extend ImageLoaded=extract('(ImageLoaded:.)(.*)', 2, message)
    | extend Initiated=extract('(Initiated:.)(.*)', 2, message)
    | extend IntegrityLevel=extract('(IntegrityLevel:.)(.*)', 2, message)
    | extend IsExecutable=extract('(IsExecutable:.)(.*)', 2, message)
    | extend LogonGuid=extract('(LogonGuid:.)(.*)', 2, message)
    | extend LogonId=extract('(LogonId:.)(.*)', 2, message)
    | extend NewThreadId=extract('(NewThreadId:.)(.*)', 2, message)
    | extend OriginalFileName=extract('(OriginalFileName:.)(.*)', 2, message)
    | extend ParentCommandLine=extract('(ParentCommandLine:.)(.*)', 2, message)
    | extend ParentImage=extract('(ParentImage:.)(.*)', 2, message)
    | extend ParentProcessGuid=extract('(ParentProcessGuid:.)(.*)', 2, message)
    | extend ParentProcessId=extract('(ParentProcessId:.)(.*)', 2, message)
    | extend ParentUser=extract('(ParentUser:.)(.*)', 2, message)
    | extend PipeName=extract('(PipeName:.)(.*)', 2, message)
    | extend ProcessGuid=extract('(ProcessGuid:.)(.*)', 2, message)
    | extend ProcessId=extract('(ProcessId:.)(.*)', 2, message)
    | extend Product=extract('(Product:.)(.*)', 2, message)
    | extend Protocol=extract('(Protocol:.)(.*)', 2, message)
    | extend QueryName=extract('(QueryName:.)(.*)', 2, message)
    | extend QueryResults=extract('(QueryResults:.)(.*)', 2, message)
    | extend QueryStatus=extract('(QueryStatus:.)(.*)', 2, message)
    | extend RuleName=extract('(RuleName:.)(.*)', 2, message)
    | extend Session=extract('(Session:.)(.*)', 2, message)
    | extend Signature=extract('(Signature:.)(.*)', 2, message)
    | extend SignatureStatus=extract('(SignatureStatus:.)(.*)', 2, message)
    | extend Signed=extract('(Signed:.)(.*)', 2, message)
    | extend SourceHostname=extract('(SourceHostname:.)(.*)', 2, message)
    | extend SourceImage=extract('(SourceImage:.)(.*)', 2, message)
    | extend SourceIp=extract('(SourceIp:.)(.*)', 2, message)
    | extend SourceIsIpv6=extract('(SourceIsIpv6:.)(.*)', 2, message)
    | extend SourcePort=extract('(SourcePort:.)(.*)', 2, message)
    | extend SourcePortName=extract('(SourcePortName:.)(.*)', 2, message)
    | extend SourceProcessGuid=extract('(SourceProcessGuid:.)(.*)', 2, message)
    | extend SourceProcessGUID=extract('(SourceProcessGUID:.)(.*)', 2, message)
    | extend SourceProcessId=extract('(SourceProcessId:.)(.*)', 2, message)
    | extend SourceThreadId=extract('(SourceThreadId:.)(.*)', 2, message)
    | extend SourceUser=extract('(SourceUser:.)(.*)', 2, message)
    | extend StartAddress=extract('(StartAddress:.)(.*)', 2, message)
    | extend StartFunction=extract('(StartFunction:.)(.*)', 2, message)
    | extend StartModule=extract('(StartModule:.)(.*)', 2, message)
    | extend TargetFilename=extract('(TargetFilename:.)(.*)', 2, message)
    | extend TargetImage=extract('(TargetImage:.)(.*)', 2, message)
    | extend TargetObject=extract('(TargetObject:.)(.*)', 2, message)
    | extend TargetProcessGuid=extract('(TargetProcessGuid:.)(.*)', 2, message)
    | extend TargetProcessGUID=extract('(TargetProcessGUID:.)(.*)', 2, message)
    | extend TargetProcessId=extract('(TargetProcessId:.)(.*)', 2, message)
    | extend TargetUser=extract('(TargetUser:.)(.*)', 2, message)
    | extend TerminalSessionId=extract('(TerminalSessionId:.)(.*)', 2, message)
    | extend Type=extract('(Type:.)(.*)', 2, message)
    | extend User=extract('(User:.)(.*)', 2, message)
    | extend UtcTime=extract('(UtcTime:.)(.*)', 2, message)
    | extend SourceProcessName = substring(SourceImage, strlen(SourceImage) - indexof(reverse(SourceImage), @"\") - 1 + 1)
}
